server side
--------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;
using System.Net.Sockets;
using System.Threading;

namespace Server
{
    class Program                                          //SERVER SIDE
    {
        static void Main(string[] args)
        {
            Thread t = new Thread(delegate ()
            {
                Server myserver = new Server("192.168.0.107", 2100);
            });
            t.Start();
        }
    }
    class Server
    {
        TcpListener server = null;
        public Server(string ip, int port)
        {
            IPAddress localAddr = IPAddress.Parse(ip);
            server = new TcpListener(localAddr, port);
            server.Start();
            StartListener();
        }
        public void StartListener()
        {
            try
            {
                while (true)
                {
                    Console.WriteLine("Waiting for a connection...");
                    TcpClient client = server.AcceptTcpClient();
                    Console.WriteLine("Connected!");
                    Thread t = new Thread(new ParameterizedThreadStart(HandleDevice));
                    t.Start(client);
                }
            }
            catch (SocketException e)
            {
                Console.WriteLine("Socket Exception : {0}", e);
            }
        }
        public void HandleDevice(Object obj)
        {
            TcpClient client = (TcpClient)obj;
            var stream = client.GetStream();
            string imei = string.Empty;
            string data = null;
            Byte[] bytes = new Byte[1024];
            int i;
            try
            {
                while ((i = stream.Read(bytes, 0, bytes.Length)) != 0)
                {
                    string hex = BitConverter.ToString(bytes);
                    data = Encoding.ASCII.GetString(bytes, 0, i);
                    Console.WriteLine("{1}: Received: {0}", data, Thread.CurrentThread.ManagedThreadId);
                    string str="hello";
                    Byte[] reply = Encoding.ASCII.GetBytes(data);
                    stream.Write(reply, 0, reply.Length);
                    Console.WriteLine("{1}: Sent: {0}", data, Thread.CurrentThread.ManagedThreadId);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: {0}", e.ToString());
                client.Close();
            }
        }

    }

}
----------------------------------------------------------------------------------------------
client side
--------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net.Sockets;
using System.Threading;

namespace ConsoleApplication45
{
    class Program                   //CLIENT SIDE
    {
        static void Main(string[] args)
        {
            string a;
            string b;
            Console.WriteLine("Enter the first string you would like to send then recieve it afterwards:\n");
            a = Console.ReadLine();
            Console.WriteLine("Enter the second string you would like to send then recieve it afterwards:\n");
            b = Console.ReadLine();

            Console.WriteLine("Code is creating 2 clients in separate threads & both clients will send 3 messages with the Sleep of 2 seconds after each message.");
            
            
           new Thread(() =>
            {
                
               
                Thread.CurrentThread.IsBackground = true;
                Connect("192.168.0.107", a );
            }).Start();
            new Thread(() =>
            {
                Thread.CurrentThread.IsBackground = true;
                Connect("192.168.0.107", b);
            }).Start();
            Console.ReadLine();
        }
        static void Connect(String server, String message)
        {
            try
            {
                Int32 port = 2100;
                TcpClient client = new TcpClient(server, port);
                NetworkStream stream = client.GetStream();
                int count = 0;
                while (count++ < 3)
                {
                    // Translate the Message into ASCII.
                    Byte[] data = System.Text.Encoding.ASCII.GetBytes(message);
                    // Send the message to the connected TcpServer. 
                    stream.Write(data, 0, data.Length);
                    Console.WriteLine("Sent: {0}", message);
                    // Bytes Array to receive Server Response.
                    data = new Byte[256];
                    String response = String.Empty;
                    // Read the Tcp Server Response Bytes.
                    Int32 bytes = stream.Read(data, 0, data.Length);
                    response = System.Text.Encoding.ASCII.GetString(data, 0, bytes);
                    Console.WriteLine("Received: {0}", response);
                    Thread.Sleep(2000);
                }
                stream.Close();
                client.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine("Exception: {0}", e);
            }
            Console.ReadLine();
        }
    }
}