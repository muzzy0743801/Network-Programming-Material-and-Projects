using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Threading;
using System.Net.Sockets;
using System.Net;

namespace WindowsFormsApplication1
{
    public partial class Form1 : Form
    {
        Button bt = new Button();
        public List<Button> players = new List<Button>();
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
             //string[] p = "1339,90,89,88,117,118,121,122,127,99,98,97,102,103".Split(',');
            string[] p = "96,97,98".Split(',');

            for (int i2 = 0; i2 < p.Length; i2++)
            {
                spawn(p[i2]);
                int id = i2;
                int ipp = Convert.ToInt32(p[i2]);
                Thread handler = new Thread(() => read(id, ipp));
                handler.Start();
            }


        }
        public void spawn(string ip)
        {

            bt.Width = 460;
            bt.Height = 386;
            bt.Left = 100;
            bt.Top = 100;
            //bt.BackColor = Color.Green;
            bt.Text = ip;

            bt.Font = new Font("Arial", 18);
            bt.ForeColor = Color.White;
            bt.BackgroundImage = Image.FromFile(@"C:\Users\lab009\Downloads\kindpng_2076587.png");
            bt.BackgroundImageLayout = ImageLayout.Center;
            this.Controls.Add(bt);
            players.Add(bt);
        }

        public void update(int id, int x, int y, string d)
        {
            string direction = d;
            if (this.InvokeRequired == true)
            {
                this.Invoke(new MethodInvoker(() => update(id, x, y, direction)));
            }
            else
            {
                players[id].Location = new Point(Convert.ToInt32(x), Convert.ToInt32(y));
                if (direction == "up")
                {
                    bt.BackgroundImage = Image.FromFile(@"C:\Users\lab009\Downloads\kindpng_2076587.png");
                }
                else if (direction == "right")
                {
                    bt.BackgroundImage = Image.FromFile(@"C:\Users\lab009\Downloads\kindpng_2076587.png");
                }
                else if (direction == "down")
                {
                    bt.BackgroundImage = Image.FromFile(@"C:\Users\lab009\Downloads\npprojectpicskeft.png");
                }
                else if (direction == "left")
                {
                    bt.BackgroundImage = Image.FromFile(@"C:\Users\lab009\Downloads\kqqqqindpng_2076587.png");
                }
                else
                {

                }
            }
        }
        public void read(int id, int ip)
        {


            IPEndPoint pp = new IPEndPoint(IPAddress.Parse("172.16.1.103"), (ip * 10));
            UdpClient c = new UdpClient(pp);

            while (true)
            {
                try
                {
                    byte[] buffer = c.Receive(ref pp);
                    string msg = Encoding.Unicode.GetString(buffer);
                    string x = msg.Split(',')[0];
                    string y = msg.Split(',')[1];
                    string direction = msg.Split(',')[2];

                    update(id, Convert.ToInt32(x), Convert.ToInt32(y), direction); 
                }
                catch (Exception e)
                {

                }
            }


        }
    }

}